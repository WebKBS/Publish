@{
    ViewData["title"] = "토큰 발행";
}

<div class="top_title_wrap">
    <div class="inner">
        <h2 class="h2 suit_m">토큰 발행</h2>
        <p class="sub_title body_2 suit_r color_white_2">AIR DROPPER는 ‘Chrome’ 웹브라우저에 최적화 되어있으며, 모바일 서비스는 지원하지 않습니다.</p>
    </div>
</div>

<section class="cont issuing">
    <div class="inner">
        <h2 class="h4 suit_m">토큰 정보입력</h2>
        <div class="select_box">
            <div class="box">
                <h3 class="body_2 suit_m color_white_2">블록체인 네트워크</h3>
                <div class="select_list">
                    <!-- on 추가시 style 변경 -->
                    <div class="select_wrap default">
                        <button type="button" id="selectChain">
                            <img src="" />
                            <span class="select">Ethereum</span>
                        </button>
                    </div>
                    <!-- on 추가시 display -->
                    <ul class="chain_list">
                        <li>
                            <button type="button">
                                <img src="~/images/coin_icon/ethereum.svg" />
                                <span class="select">Ethereum</span>
                            </button>
                        </li>
                        <li>
                            <button type="button">
                                <img src="~/images/coin_icon/polygon.svg" />
                                <span class="select">Polygon</span>
                            </button>
                        </li>
                        <li>
                            <button type="button">
                                <img src="~/images/coin_icon/bsc.svg" />
                                <span class="select">Bsc</span>
                            </button>
                        </li>
                        <li>
                            <button type="button">
                                <img src="~/images/coin_icon/klaytn.svg" />
                                <span class="select">Klaytn</span>
                            </button>
                        </li>
                    </ul>
                </div>
            </div>
            <div class="box">
                <h3 class="body_2 suit_m color_white_2">토큰 형식</h3>
                <div class="select_list">
                    <!-- default 클래스 삭제시 흰색 색상 -->
                    <div class="select_wrap default">
                        <button type="button" id="selectToken">
                            <span class="select">토큰 형식 선택</span>
                        </button>
                    </div>
                    <ul class="token_list">
                        <li>
                            <button type="button">
                                <span class="select">ERC-20</span>
                            </button>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="input_box">
            <div class="box">
                <h3 class="body_2 suit_m color_white_2">토큰명</h3>
                <input type="text" placeholder="영문 6자 이내 권장" />
            </div>
            <div class="box">
                <h3 class="body_2 suit_m color_white_2">토큰티커</h3>
                <input type="text" placeholder="영문 6자 이내 권장" />
            </div>
            <div class="box">
                <h3 class="body_2 suit_m color_white_2">디시멀(Decimal)</h3>
                <input type="tel" placeholder="1~99 사이" />
            </div>
        </div>
        <div class="input_box">
            <div class="box">
                <h3 class="body_2 suit_m color_white_2">총 발행량</h3>
                <input type="text" placeholder="" />
            </div>
        </div>
        <div class="checkbox_wrap">
            <h3 class="body_2 suit_m color_white_2">기능 선택</h3>
            <div class="box">
                <ul>
                    <li>
                        <p class="title table_1 suit_r color_white_2">일반 락</p>
                        <div class="text_wrap">
                            <input type="checkbox" id="check1" />
                            <label for="check1" class="text table_1 suit_l">
                                해당 주소에서의 토큰 이동을 바로 잠금
                                <span class="color_white_2">&#8251 일반 락 미 설정 시 컨트랙트에 대한 신뢰도를 낮출 수 있습니다.</span>
                            </label>
                        </div>
                    </li>
                    <li>
                        <p class="title table_1 suit_r color_white_2">타임 락</p>
                        <div class="text_wrap">
                            <input type="checkbox" id="check2" />
                            <label for="check2" class="text table_1 suit_l">정해진 일시에 락이 해제됨</label>
                        </div>
                    </li>
                    <li>
                        <p class="title table_1 suit_r color_white_2">다기능 락</p>
                        <div class="text_wrap">
                            <input type="checkbox" id="check3" />
                            <label for="check3" class="text table_1 suit_l">정해진 일시부터 시작하여 특정 주기 및 회수로 나누어 락이 해제됨</label>
                        </div>
                    </li>
                    <li>
                        <p class="title table_1 suit_r color_white_2">컨트랙트 정지</p>
                        <div class="text_wrap">
                            <input type="checkbox" id="check4" />
                            <label for="check4" class="text table_1 suit_l">일시에 스마트컨트랙트를 정지시켜 거래를 중단시킴 (해제 기능 포함)</label>
                        </div>
                    </li>
                    <li>
                        <p class="title table_1 suit_r color_white_2">소각</p>
                        <div class="text_wrap">
                            <input type="checkbox" id="check5" />
                            <label for="check5" class="text table_1 suit_l">일정 수량의 토큰을 소각</label>
                        </div>
                    </li>
                    <li>
                        <p class="title table_1 suit_r color_white_2">일반 락커 추가</p>
                        <div class="text_wrap">
                            <input type="checkbox" id="check6" />
                            <label for="check6" class="text table_1 suit_l">락을 걸거나 해제 할 수 있는 주소를 지정 또는 추가</label>
                        </div>
                    </li>
                    <li>
                        <p class="title table_1 suit_r color_white_2">버너 추가</p>
                        <div class="text_wrap">
                            <input type="checkbox" id="check7" />
                            <label for="check7" class="text table_1 suit_l">소각할 수 있는 주소를 지정 또는 추가</label>
                        </div>
                    </li>
                    <li>
                        <p class="title table_1 suit_r color_white_2">오너 변경</p>
                        <div class="text_wrap">
                            <input type="checkbox" id="check8" />
                            <label for="check8" class="text table_1 suit_l">컨트랙트 오너를 다른 주소로 변경</label>
                        </div>
                    </li>
                </ul>
            </div>
        </div>
        <div class="info_text_wrap">
            <h3 class="body_2 suit_m color_white_2">오너지갑</h3>
            <div class="text_box body_2 suit_r color_white_2">
                락업이나 락 해제, 소각 등 스마트 컨트랙트를 관리자의 지갑 주소입니다. 비용 결제 지갑 주소와
                다른 지갑 주소로 오너 지갑을 지정하기를 원하시면, 비용 결제 후 토큰 발행 전에 메타 마스크 또는 카이 카스의 해당 지갑 주소로 변경하셔야 합니다.
            </div>
        </div>
        <div class="button_wrap">
            <button type="button" class="button_160 payment_btn" disabled>발행비용 결제</button>
        </div>
    </div>
</section>

<select hidden>
    <option value="Ethereum">Ethereum</option>
    <option value="Polygon">Polygon</option>
    <option value="BSC">BSC</option>
    <option value="Klaytn">Klaytn</option>
</select>
<select hidden>
    <option>ERC-20</option>
</select>

<script>
    const chainSelectBtn = document.getElementById('selectChain');
    const tokenSelectBtn = document.getElementById('selectToken');


    chainSelectBtn.addEventListener('click', (e) => {
        e.preventDefault();
        openMenu(e);

    });
    tokenSelectBtn.addEventListener('click', (e) => {
        e.preventDefault();
        openMenu(e);
    });

    const removeClassSelectList = () => {
        document.querySelectorAll('.select_list > ul').forEach(ev => {
            ev.classList.remove('on');
        })
    }

    // select 열기
    const openMenu = (event) => {
        const target = event.currentTarget;
        const nextElement = target.parentElement.nextElementSibling;

        removeClassSelectList();

        nextElement.classList.add('on');
    }

    // select 닫기
    document.body.addEventListener('click', (e) => {
        const target = e.target
        const isSelect = target.classList.contains('select_list') || target.closest('.select_list');

        if (isSelect) return;
        removeClassSelectList();
    })

    document.querySelectorAll('.chain_list li button').forEach(ev => {
        ev.addEventListener('click', (e) => {
            removeClassSelectList();
            chainSelectBtn.parentElement.classList.add('on');
            chainSelectBtn.querySelector('img').src = ev.children[0].src;
            chainSelectBtn.querySelector('.select').textContent = ev.children[1].textContent;
        })
    })

    document.querySelectorAll('.token_list li button').forEach(ev => {
        ev.addEventListener('click', (e) => {
            removeClassSelectList();
            tokenSelectBtn.parentElement.classList.add('on');
            tokenSelectBtn.querySelector('.select').textContent = ev.children[0].textContent;
        })
    })


                    // 체크박스
                    //const checkBtn = document.querySelectorAll('input[type=checkbox]');
                    //const paymentBtn = document.querySelector('.payment_btn');

                    //const updateCheck = () => {
                    //    let checkCount = 0;
                    //    for (let check of checkBtn) {
                    //        if (check.checked) {
                    //            checkCount++
                    //        }
                    //        console.log(checkCount)
                    //    }
                    //    if(checkCount === checkBtn.length){
                    //        paymentBtn.disabled = false;
                    //    }else{
                    //        paymentBtn.disabled = true;
                    //    }
                    //}

                    //for (let check of checkBtn) {
                    //    check.addEventListener('click', updateCheck)
                    //}

</script>


@section Modals{
    <!-- on 추가시 display -->
    <div class="modal connection">
        <!--data-modal-close 모달 닫기 -->
        <button type="button" class="modal_x_btn" data-modal-close>
            <span class="line"></span>
            <span class="line"></span>
        </button>
        <div class="inner">
            <h4 class="h1 jost_m color_theme">Wallet Connection</h4>
            <p class="sub_title body_2 suit_m">
                NFT 생성 시 사용하는 블록체인 네트워크에 해당하는<br />
                지갑을 선택해주세요.
            </p>
            <ul>
                <li>
                    <button type="button">
                        <img src="~/images/icons/metamask.png" alt="metamask" />
                        <span>Connect Metamask</span>
                    </button>
                </li>
                <li>
                    <button type="button">
                        <img src="~/images/icons/kaikas.png" alt="kaikas" />
                        <span>Connect KaiKas</span>
                    </button>
                </li>
            </ul>
        </div>
    </div>

    <div class="modal issuing">
        <!--data-modal-close 모달 닫기 -->
        <div class="inner">
            <h4 class="h1 jost_m color_theme">ISSUING</h4>
            <p class="sub_title body_2 suit_m">
                현재 연결된 지갑 주소는<br />
                <strong class="color_theme">0x7dE7bAa83766D413D7fE382e14c72178CC5695a3</strong><br />
                입니다. 이 주소를 오너지갑으로 지정하신다면 ‘발행하기’를 클릭하시고, 다른 지갑주소로 오너지갑을 지정하고자 하시면 화면을 닫고 해당 지갑을 연결하시기 바랍니다.
            </p>
            <ul>
                <li>
                    <button type="button" class="button_140">발행하기</button>
                </li>
                <li>
                    <button type="button" class="button_140" data-modal-close>닫기</button>
                </li>
            </ul>
        </div>
    </div>
}
@section Heads{
    <link rel="stylesheet" href="~/css/pages/Issuing.css" />
}

@section Scripts{

}